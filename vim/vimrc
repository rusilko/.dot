set nocompatible                " choose no compatibility with legacy vi
call pathogen#infect()          " Use pathogen for bundle management
let mapleader=","               " Set the best leader
set re=1                        " Set old regex engine: http://stackoverflow.com/questions/16902317/vim-slow-with-ruby-syntax-highlighting
syntax on

"" Solarized color theme settings
set background=dark                                  " Solarized with dark background
let g:solarized_hitrail=1                            " trailing spaces highlight
colorscheme solarized
so ~/.dot/vim/bundle/Solarized/autoload/togglebg.vim " autload bg toggle plugin

"" Ggeneral settings
set encoding=utf-8
set showcmd                     " show partial commands below the status line
set ruler                       " show the cursor position all the time
set cursorline                  " highlight the line of the cursor
set scrolloff=3                 " have some context around the current line always on screen
filetype plugin indent on       " load file type plugins + indentation

"" Whitespace
set nowrap                      " don't wrap lines
set tabstop=2 shiftwidth=2      " a tab is two spaces
set expandtab                   " use spaces, not tabs
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

"" Escaping from instert mode
inoremap jj <ESC>
inoremap kk <ESC>

"" Easier buffers switching
nnoremap <leader><leader> <C-^>

"" NERDTree
map <C-e> :NERDTreeToggle<CR>
" open NERDTree in new windows if no command line args set
" autocmd VimEnter * if !argc() | NERDTree | endif

"" Tab completion
" will insert tab at beginning of line,
" will use completion if not at beginning
set wildmode=list:longest,list:full
set complete=.,w,t,b
function! InsertTabWrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
 endif
endfunction
inoremap <Tab> <c-r>=InsertTabWrapper()<cr>

" 80th and 120th column indicator
let &colorcolumn="81,".join(range(121,999),",")

" move above and enter instert mode
inoremap jk <ESC><S-o>

" set mouse scrolling and clicking inside vim
set mouse=a

" display statusline all the time
set laststatus=2

" display special characters in status line
let g:airline_powerline_fonts=1

" trying using ; for commands
nnoremap ; :

"" Ack
" prevent :Ack from leaving search output in the shell
set shellpipe=&>

" don't use Ex mode, use Q for formatting
map Q gq

" clear the search buffer when hitting return
:nnoremap <CR> :nohlsearch<cr>

" toggle the current fold
:nnoremap <Space> za

" yank to system clipboard
map <leader>y "*y

" paste lines from unnamed register and fix indentation
nmap <leader>p pV`]=
nmap <leader>P PV`]=

