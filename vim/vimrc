set nocompatible                " choose no compatibility with legacy vi
call pathogen#infect()          " Use pathogen for bundle management
let mapleader=","               " Set the best leader
syntax on

set background=dark             " Solarized with dark background
colorscheme solarized
" set comments to be italic
highlight Comment cterm=italic
" autload bg toggle plugin
so ~/.dot/vim/bundle/Solarized/autoload/togglebg.vim

set encoding=utf-8

set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation

"" Whitespace
set nowrap                      " don't wrap lines
set tabstop=2 shiftwidth=2      " a tab is two spaces 
set expandtab                   " use spaces, not tabs 
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

"" Escaping from instert mode
inoremap jj <ESC>
inoremap kk <ESC>

"" Easier buffers switching
nnoremap <leader><leader> <C-^>

"" NERDTree
map <C-e> :NERDTreeToggle<CR>

" Tab completion
" will insert tab at beginning of line,
" will use completion if not at beginning
set wildmode=list:longest,list:full
set complete=.,w,t,b
function! InsertTabWrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
 endif
endfunction
inoremap <Tab> <c-r>=InsertTabWrapper()<cr>

" 80th and 120th column indicator
let &colorcolumn="81,".join(range(121,999),",")

" move above end and instert mode
inoremap jk <ESC><S-o>

" set mouse scrolling and clicking inside vim
set mouse=a
